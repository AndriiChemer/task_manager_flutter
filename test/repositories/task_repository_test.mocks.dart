// Mocks generated by Mockito 5.0.16 from annotations
// in flutter_task_manager/test/repositories/task_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:flutter_task_manager/core/params/task_request.dart' as _i8;
import 'package:flutter_task_manager/core/preferences/filter_preferences.dart'
    as _i10;
import 'package:flutter_task_manager/features/data/task/api/models/pagination/pagination_response.dart'
    as _i9;
import 'package:flutter_task_manager/features/data/task/api/models/task/task_response.dart'
    as _i2;
import 'package:flutter_task_manager/features/data/task/api/models/task_list_response.dart'
    as _i3;
import 'package:flutter_task_manager/features/data/task/api/task_api_data_source.dart'
    as _i6;
import 'package:flutter_task_manager/features/domain/task/model/pagination.dart'
    as _i4;
import 'package:flutter_task_manager/features/domain/task/model/task.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTaskResponseDTO_0 extends _i1.Fake implements _i2.TaskResponseDTO {}

class _FakeTaskDTO_1 extends _i1.Fake implements _i2.TaskDTO {}

class _FakeTaskListResponse_2 extends _i1.Fake implements _i3.TaskListResponse {
}

class _FakePagination_3 extends _i1.Fake implements _i4.Pagination {}

class _FakeTask_4 extends _i1.Fake implements _i5.Task {}

/// A class which mocks [TaskApiDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskApiDataSource extends _i1.Mock implements _i6.TaskApiDataSource {
  MockTaskApiDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.TaskResponseDTO> createTask(_i8.TaskRequest? taskRequest) =>
      (super.noSuchMethod(Invocation.method(#createTask, [taskRequest]),
              returnValue:
                  Future<_i2.TaskResponseDTO>.value(_FakeTaskResponseDTO_0()))
          as _i7.Future<_i2.TaskResponseDTO>);
  @override
  _i7.Future<void> deleteTask(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteTask, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i2.TaskDTO> getTaskById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTaskById, [id]),
              returnValue: Future<_i2.TaskDTO>.value(_FakeTaskDTO_1()))
          as _i7.Future<_i2.TaskDTO>);
  @override
  _i7.Future<_i3.TaskListResponse> getTaskList(String? sort, String? order) =>
      (super.noSuchMethod(Invocation.method(#getTaskList, [sort, order]),
              returnValue:
                  Future<_i3.TaskListResponse>.value(_FakeTaskListResponse_2()))
          as _i7.Future<_i3.TaskListResponse>);
  @override
  _i7.Future<void> updateTask(int? id, _i8.TaskRequest? taskRequest) =>
      (super.noSuchMethod(Invocation.method(#updateTask, [id, taskRequest]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PaginationMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaginationMapper extends _i1.Mock implements _i9.PaginationMapper {
  MockPaginationMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Pagination call(_i9.PaginationResponse? data) =>
      (super.noSuchMethod(Invocation.method(#call, [data]),
          returnValue: _FakePagination_3()) as _i4.Pagination);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TaskMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskMapper extends _i1.Mock implements _i2.TaskMapper {
  MockTaskMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Task call(_i2.TaskDTO? data) =>
      (super.noSuchMethod(Invocation.method(#call, [data]),
          returnValue: _FakeTask_4()) as _i5.Task);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FiltersPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockFiltersPreferences extends _i1.Mock
    implements _i10.FiltersPreferences {
  MockFiltersPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> setSortByType(String? token) =>
      (super.noSuchMethod(Invocation.method(#setSortByType, [token]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<String> getSortByType() =>
      (super.noSuchMethod(Invocation.method(#getSortByType, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<bool> setOrderByType(String? value) =>
      (super.noSuchMethod(Invocation.method(#setOrderByType, [value]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<String> getOrderByType() =>
      (super.noSuchMethod(Invocation.method(#getOrderByType, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  String toString() => super.toString();
}
